Class("Installer",
       Description("installer"),

       #misc
       Function("get_system_users", JSValueRef("users", "system users"),

       ),

       Function("create_user", Boolean("ret", "create user succeed or failed"),
           String("username", "username"), String("hostname", "hostname"), String("password", "password"),
       ),

       Function("finish_install", Null(),

       ),

       Function("reboot", Null(),

       ),

       Function("get_keyboard_layouts", JSValueRef("layouts", "keyboard layouts"),

       ),

       Function("get_layout_variants", JSValueRef("layout_variants", "keyboard layout variants"),
            String("name", "layout name"),
       ),

       Function("get_current_layout_variant", JSValueRef("current", "current layout variant"),

       ),

       Function("set_keyboard_layout_variant", Null(),
            String("layout", "layout name"), String("variant", "variant name"),
       ),

       Function("get_timezone_list", JSValueRef("timezones", "list of system timezones"),

       ),

       Function("set_timezone", Null(),
            String("timezone", "timezone name"), 
       ),

       Function("copy_file", Null(),
            String("source", "source file copy to target"), 
       ),

       Function("extract_squashfs", Null(),

       ),

       Function("mount_procfs", Boolean("ret", "mount succeed or failed"),

       ),

       Function("chroot_target", Boolean("ret", "chroot succeed or failed"),

       ),

       #part
       Function("rand_uuid", String("uuid", "uuid"),

       ),

       Function("list_disks", JSValueRef("disks", "disk uuids"),

       ),

       Function("get_disk_path", String("path", "path of the spec disk"), 
           String("disk", "disk uuid"),
       ),

       Function("get_disk_model", String("model", "model of the spec disk"), 
           String("disk", "disk uuid"),
       ),

       Function("get_disk_max_primary_count", Number("count", "max primary count of the spec disk"), 
           String("disk", "disk uuid"),
       ),

       Function("get_disk_length", Number("length", "length of the spec disk by unit PedSector"), 
           String("disk", "disk uuid"),
       ),

       Function("get_disk_partitions", JSValueRef("partitions", "partition uuids"),
           String("disk", "disk uuid"),
       ),

       Function("get_partition_type", String("type", "type of the spec partition"),
           String("partition", "partition uuid"),
       ),

       Function("get_partition_name", String("name", "name of the spec partition"),
           String("partition", "partition uuid"),
       ),

       Function("get_partition_path", String("path", "path of the partition"),
           String("partition", "partition uuid"),
       ),

       Function("get_partition_mp", String("mp", "mount point of the partition"),
           String("partition", "partition uuid"),
       ),

       Function("get_partition_start", Number("start", "start of the spec partition by unit PedSector"), 
           String("partition", "partition uuid"),
       ),

       Function("get_partition_length", Number("length", "length of the spec partition by unit PedSector"), 
           String("partition", "partition uuid"),
       ),

       Function("get_partition_end", Number("end", "end of the spec partition by unit PedSector"), 
           String("partition", "partition uuid"),
       ),

       Function("get_partition_fs", CString("fs", "filesystem of the spec partition"),
           String("partition", "partition uuid"),
       ),

       Function("get_partition_label", String("label", "label of the spec partition"),
           String("partition", "partition uuid"),
       ),

       Function("get_partition_flag", Boolean("status", "status of the partition flag"),
           String("partition", "partition uuid"), String("flag", "flag of the partition"),
       ),

       Function("get_partition_busy", Boolean("busy", "is partition busy"),
           String("partition", "partition uuid"),
       ),

       Function("get_partition_used", String("used", "used space of the partition"),
           String("partition", "partition uuid"),
       ),

       Function("new_disk_partition", Null(),
           String("part", "part uuid"), String("disk", "disk uuid"), String("type", "partition type"), String("fs", "partition fs"),
           Number("start", "partition geom start"), Number("end", "partition geom end"),
       ),

       Function("delete_disk_partition", Null(),
           String("disk", "disk uuid"), String("partition", "partition uuid"),
       ),

       Function("update_partition_fs", Null(),
           String("partition", "partition uuid"), String("fs", "filesystem name"),
       ),

       Function("write_partition_mp", Boolean("ret", "write mp succeed or failed"),
           String("partition", "partition uuid"), String("mp", "mount point"),
       ),

       Function("set_partition_flag", Null(), 
           String("partition", "partition uuid"), String("flag", "flag of the partition"), Boolean("status", "status of the flag"),
       ),

       Function("write_disk", Null(),
           String("disk", "disk uuid"),
       ),

       Function("mount_target", Boolean(),
           String("part", "part uuid"),
       ),

       Function("update_grub", Boolean(),
           String("uuid", "part uuid or disk uuid"),
       ),
)
